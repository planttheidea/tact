.p-float-class(@max,@class) {
	.loop-all(@i) when (@i =< @max) and (@class = all) {	  
		[data-p="@{i}"] {
			width: (1% * @i);
		}
	  
		.loop-all(@i + 1);
	}
	
	.loop-xs(@i) when (@i =< @max) and (@class = xs) {	  
		[data-p-xs="@{i}"] {
			width: (1% * @i);
		}
	  
		.loop-xs(@i + 1);
	}
	
	.loop-s(@i) when (@i =< @max) and (@class = s) {	  
		[data-p-s="@{i}"] {
			width: (1% * @i);
		}
	  
		.loop-s(@i + 1);
	}
	
	.loop-m(@i) when (@i =< @max) and (@class = m) {	  
		[data-p-m="@{i}"] {
			width: (1% * @i);
		}
	  
		.loop-m(@i + 1);
	}
	
	.loop-l(@i) when (@i =< @max) and (@class = l) {	  
		[data-p-l="@{i}"] {
			width: (1% * @i);
		}
	  
		.loop-l(@i + 1);
	}
	
	.loop-xl(@i) when (@i =< @max) and (@class = xl) {	  
		[data-p-xl="@{i}"] {
			width: (1% * @i);
		}
	  
		.loop-xl(@i + 1);
	}

	.loop-all(0);
	.loop-xs(0);
	.loop-s(0);
	.loop-m(0);
	.loop-l(0);
	.loop-xl(0);
}

.f-float-class(@start,@class,@min,@step){
	.loop-all(@i) when (@i > @min) and (@class = all) {
    	@n: ((@i - 1));
    
    	[data-f="@{n}/@{start}"] {
    		width: (100% * ((@n / @start)));
    	}
    	
    	.loop-all(@i - @step);
    }
    
    .loop-xs(@i) when (@i > @min) and (@class = xs) {
    	@n: ((@i - 1));
    
    	[data-f-xs="@{n}/@{start}"] {
    		width: (100% * ((@n / @start)));
    	}
    	
    	.loop-xs(@i - @step);
    }
    
    .loop-s(@i) when (@i > @min) and (@class = s) {
    	@n: ((@i - 1));
    
    	[data-f-s="@{n}/@{start}"] {
    		width: (100% * ((@n / @start)));
    	}
    	
    	.loop-s(@i - @step);
    }
    
    .loop-m(@i) when (@i > @min) and (@class = m) {
    	@n: ((@i - 1));
    
    	[data-f-m="@{n}/@{start}"] {
    		width: (100% * ((@n / @start)));
    	}
    	
    	.loop-m(@i - @step);
    }
    
    .loop-l(@i) when (@i > @min) and (@class = l) {
    	@n: ((@i - 1));
    
    	[data-f-l="@{n}/@{start}"] {
    		width: (100% * ((@n / @start)));
    	}
    	
    	.loop-l(@i - @step);
    }
    
    .loop-xl(@i) when (@i > @min) and (@class = xl) {
    	@n: ((@i - 1));
    
    	[data-f-xl="@{n}/@{start}"] {
    		width: (100% * ((@n / @start)));
    	}
    	
    	.loop-xl(@i - @step);
    }

	.loop-all (@start);
	.loop-xs (@start);
	.loop-s (@start);
	.loop-m (@start);
	.loop-l (@start);
	.loop-xl (@start);
}

.f-float-class-12(@start,@class,@min,@step){
    .loop-all(@i) when (@i > @min) and (@class = all) {
    	@n: ((@i - 1));
    
    	[data-f="@{n}/@{start}"] when not (@n = 9) {
    		width: (100% * ((@n / @start)));
    	}
    	
    	.loop-all(@i - @step);
    }
    
    .loop-xs(@i) when (@i > @min) and (@class = xs) {
    	@n: ((@i - 1));
    
    	[data-f-xs="@{n}/@{start}"] when not (@n = 9) {
    		width: (100% * ((@n / @start)));
    	}
    	
    	.loop-xs(@i - @step);
    }
    
    .loop-s(@i) when (@i > @min) and (@class = s) {
    	@n: ((@i - 1));
    
    	[data-f-s="@{n}/@{start}"] when not (@n = 9) {
    		width: (100% * ((@n / @start)));
    	}
    	
    	.loop-s(@i - @step);
    }
    
    .loop-m(@i) when (@i > @min) and (@class = m) {
    	@n: ((@i - 1));
    
    	[data-f-m="@{n}/@{start}"] when not (@n = 9) {
    		width: (100% * ((@n / @start)));
    	}
    	
    	.loop-m(@i - @step);
    }
    
    .loop-l(@i) when (@i > @min) and (@class = l) {
    	@n: ((@i - 1));
    
    	[data-f-l="@{n}/@{start}"] when not (@n = 9) {
    		width: (100% * ((@n / @start)));
    	}
    	
    	.loop-l(@i - @step);
    }
    
    .loop-xl(@i) when (@i > @min) and (@class = xl) {
    	@n: ((@i - 1));
    
    	[data-f-xl="@{n}/@{start}"] when not (@n = 9) {
    		width: (100% * ((@n / @start)));
    	}
    	
    	.loop-xl(@i - @step);
    }

	.loop-all (@start);
	.loop-xs (@start);
	.loop-s (@start);
	.loop-m (@start);
	.loop-l (@start);
	.loop-xl (@start);
}

.f-float-class-first(@start,@class,@min){	
    .loop-all(@i) when (@i > @min) and (@class = all) {		
		[data-f="1/@{i}"] {
			width: (100% * (1 / @i));
		}
		
		.loop-all(ceil((@i / 2)));
	}
		
    .loop-xs(@i) when (@i > @min) and (@class = xs) {		
		[data-f-xs="1/@{i}"] {
			width: (100% * (1 / @i));
		}
		
		.loop-xs(ceil((@i / 2)));
	}
		
    .loop-s(@i) when (@i > @min) and (@class = s) {		
		[data-f-s="1/@{i}"] {
			width: (100% * (1 / @i));
		}
		
		.loop-s(ceil((@i / 2)));
	}
		
    .loop-m(@i) when (@i > @min) and (@class = m) {		
		[data-f-m="1/@{i}"] {
			width: (100% * (1 / @i));
		}
		
		.loop-m(ceil((@i / 2)));
	}
		
    .loop-l(@i) when (@i > @min) and (@class = l) {		
		[data-f-l="1/@{i}"] {
			width: (100% * (1 / @i));
		}
		
		.loop-l(ceil((@i / 2)));
	}
		
    .loop-xl(@i) when (@i > @min) and (@class = xl) {		
		[data-f-xl="1/@{i}"] {
			width: (100% * (1 / @i));
		}
		
		.loop-xl(ceil((@i / 2)));
	}

	.loop-all (@start);
	.loop-xs (@start);
	.loop-s (@start);
	.loop-m (@start);
	.loop-l (@start);
	.loop-xl (@start);
}

.f-float-class-zero(@class){   
	[data-f="0/1"] when (@class = all){
		width: 0;
	}
    
	[data-f-xs="0/1"] when (@class = xs) {
		width: 0;
	}
    
    [data-f-s="0/1"] when (@class = s) {
		width: 0;
	}
    
	[data-f-m="0/1"] when (@class = m) {
		width: 0;
	}
    
    [data-f-l="0/1"] when (@class = l) {
		width: 0;
	}
    
    [data-f-xl="0/1"] when (@class = xl) {
		width: 0;
	}
}

.f-float-class-full(@class){ 
	[data-f="1/1"] when (@class = all){
		width: 100%;
	}
    
	[data-f-xs="1/1"] when (@class = xs) {
		width: 100%;
	}
    
    [data-f-s="1/1"] when (@class = s) {
		width: 100%;
	}
    
	[data-f-m="1/1"] when (@class = m) {
		width: 100%;
	}
    
    [data-f-l="1/1"] when (@class = l) {
		width: 100%;
	}
    
    [data-f-xl="1/1"] when (@class = xl) {
		width: 100%;
	}
}

.f-float-class-all(@class){
	
    .f-float-class(24,@class,4,2);
    .f-float-class-12(12,@class,4,2);
    .f-float-class(8,@class,2,2);
    .f-float-class(6,@class,4,2);
    .f-float-class(5,@class,1,1);
    .f-float-class(4,@class,3,1);
    .f-float-class(3,@class,2,1);
    
    .f-float-class-first(24,@class,2);
    .f-float-class-first(8,@class,1);
    
    .f-float-class-zero(@class);
    .f-float-class-full(@class);
}

.gr-float-class-zero(@class){   
	[data-gr="0"] when (@class = all){
		width: 0;
	}
    
	[data-gr-xs="0"] when (@class = xs) {
		width: 0;
	}
    
    [data-gr-s="0"] when (@class = s) {
		width: 0;
	}
    
	[data-gr-m="0"] when (@class = m) {
		width: 0;
	}
    
    [data-gr-l="0"] when (@class = l) {
		width: 0;
	}
    
    [data-gr-xl="0"] when (@class = xl) {
		width: 0;
	}
}

.gr-float-class-full(@class){ 
	[data-gr="13"] when (@class = all){
		width: 100%;
	}
    
	[data-gr-xs="13"] when (@class = xs) {
		width: 100%;
	}
    
    [data-gr-s="13"] when (@class = s) {
		width: 100%;
	}
    
	[data-gr-m="13"] when (@class = m) {
		width: 100%;
	}
    
    [data-gr-l="13"] when (@class = l) {
		width: 100%;
	}
    
    [data-gr-xl="13"] when (@class = xl) {
		width: 100%;
	}
}

.gr-float-class(@start,@class,@max,@step){
	.suffix(@i) when (@i = 1) {
		@suffix: 8;
	}
	
	.suffix(@i) when (@i = 2) {
		@suffix: 5;
	}
	
	.suffix(@i) when (@i = 3) {
		@suffix: 3;
	}
	
	.suffix(@i) when (@i = 4) {
		@suffix: 2;
	}
	
	.suffix(@i) when (@i = 5) {
		@suffix: 1;
	}

	.loop-all(@i) when (@i =< @max) and (@class = all) {	  
		.suffix(@i);
	  
		[data-gr="@{suffix}"] {
			width: (100% / pow(1.618033989,@i));
		}
		
		.loop-all(@i + @step);
	}

	.loop-xs(@i) when (@i =< @max) and (@class = xs) {	  
		.suffix(@i);
	  
		[data-gr-xs="@{suffix}"] {
			width: (100% / pow(1.618033989,@i));
		}
		
		.loop-xs(@i + @step);
	}

	.loop-s(@i) when (@i =< @max) and (@class = s) {	  
		.suffix(@i);
	  
		[data-gr-s="@{suffix}"] {
			width: (100% / pow(1.618033989,@i));
		}
		
		.loop-s(@i + @step);
	}

	.loop-m(@i) when (@i =< @max) and (@class = m) {	  
		.suffix(@i);
	  
		[data-gr-m="@{suffix}"] {
			width: (100% / pow(1.618033989,@i));
		}
		
		.loop-m(@i + @step);
	}

	.loop-l(@i) when (@i =< @max) and (@class = l) {	  
		.suffix(@i);
	  
		[data-gr-l="@{suffix}"] {
			width: (100% / pow(1.618033989,@i));
		}
		
		.loop-l(@i + @step);
	}

	.loop-xl(@i) when (@i =< @max) and (@class = xl) {	  
		.suffix(@i);
	  
		[data-gr-xl="@{suffix}"] {
			width: (100% / pow(1.618033989,@i));
		}
		
		.loop-xl(@i + @step);
	}
	
	.loop-all(@start);
	.loop-xs(@start);
	.loop-s(@start);
	.loop-m(@start);
	.loop-l(@start);
	.loop-xl(@start);
	
	.gr-float-class-zero(@class);
	.gr-float-class-full(@class);
}
